package runtime

import (
	"github.com/Joystream/tinygo-wasm-substrate/srml/metadata"
	"github.com/Joystream/tinygo-wasm-substrate/srml/support"
	"github.com/Joystream/tinygo-wasm-substrate/srml/support/system"
)

// While in Rust implementation of SRML this is an enum generated by a
// construct_runtime macro, in Go we have to assemble the Runtime at runtime.

// Runtime is the object encapsulating your whole application.
// It is configured by the specifications of type parameters and plugged in modules.
type Runtime struct {
	Modules    []support.Module
	System     system.Module
	TypeParams support.TypeParamsFactory
}

func RegisterModule(r Runtime, m support.Module) {
	m.InitForRuntime(r.TypeParams)
	r.Modules = append(r.Modules, m)
	sm, ok := m.(*system.Module)
	if ok {
		r.System = *sm
	}
}

func (r Runtime) GetMetadata() metadata.RuntimeMetadata {
	return metadata.RuntimeMetadata{}
}
